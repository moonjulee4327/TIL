<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace : xml 파일은 여러개일 수 있으므로 이를 구별하기 위한 식별 용도로 사용 -->
<mapper namespace="book">
	
	<sql id="where">	    
	   <!-- 통합검색 -->
	    AND (MEM_ID LIKE '%' || #{keyword} || '%'
	    OR  MEM_NAME LIKE '%' || #{keyword} || '%'
	    OR MEM_JOB LIKE '%' || #{keyword} || '%'
	    OR MEM_LIKE LIKE '%' || #{keyword} || '%'
	    OR MEM_HP LIKE '%' || #{keyword} || '%')
	</sql>

	<!--  MyBatis에서 제공해주는 데이터 입력을 나타내는 태그
      1) 드루와 : Dao 객체가 던진 데이터타입(String, int, hashMap, VO, List)
                parameterType만 씀
                BookVO [bookId=0, title=개똥이 월드, category=소설
                    , price=10000, insertDate=null]
      2) 가즈아 : Dao 객체의 메소드 쪽으로 리턴할 타입
            - resultType : String, int, VO, hashMap
            - resultMap : MyBatis의 resultMap 태그를 사용
      3) insert, update, delete 태그의 resultType은 생략=>0 또는 반영된 개수
      
      bookVO(전)=>[bookId=0, title=개똥이 월드, category=소설
                    , price=10000, insertDate=null]
      bookVO(후)=>[bookId=1, title=개똥이 월드, category=소설
                    , price=10000, insertDate=null]
   -->
   <!-- BOOK 테이블에 insert -->
   <insert id="insert" parameterType="kr.or.ddit.vo.BookVO">
      <selectKey order="BEFORE" resultType="integer" keyProperty="bookId">
         SELECT NVL(MAX(BOOK_ID),0)+1 FROM BOOK
      </selectKey>
   
      INSERT INTO BOOK(BOOK_ID, TITLE, CATEGORY, PRICE, INSERT_DATE)
      VALUES(#{bookId},#{title},#{category},#{price},SYSDATE)
   </insert>
   
   <!-- 
   		책 상세보기 
   		select 태그는 조회 쿼리를 실행하기 위한 mybatis 태그.
   		parameterType(book_SQL.xml로 들어옴.) : BookVO 타입
   		resultType(bookDao로 간다.) : BookVO 타입
   		
   				
   -->
   <select id="select_detail" parameterType="bookVO" resultType="bookVO">
   		SELECT BOOK_ID, TITLE, CATEGORY, PRICE, INSERT_DATE
		FROM BOOK
		WHERE BOOK_ID = #{bookId}
   </select>
   
   <!-- 
   		책 목록
   		where 1=1 은 늘 참
   		조건이 2개 이상일 때 where + and
   		조건이 1개일 떼 where 이어야 함
   			WHERE (생략)
   			AND => 오류 발생
   			==>
   			WHERE 1=1
   			AND (생략)
   			AND => 정상
   			
   		파라미터 타입 : x
   		리턴 타입 : bookVO
    -->
   <select id="list" parameterType="string" resultType="bookVO">
   		SELECT BOOK_ID, TITLE, CATEGORY, PRICE, INSERT_DATE
		FROM BOOK
		WHERE 1 = 1
		<if test="keyword != null and keyword != ''">
		AND (TITLE LIKE '%' || #{keyword} || '%' 
		OR CATEGORY LIKE '%' || #{keyword} || '%')
		ORDER BY INSERT_DATE DESC
		</if>
   </select>
   
   <!-- 책 수정하기. update 태그는 update SQL문을 실행하기 위한 마이바티스 태그 -->
   <update id="update" parameterType="bookVO">
   		UPDATE BOOK
		SET    TITLE=#{title}, CATEGORY=#{category}, PRICE=#{price}
		WHERE  BOOK_ID = #{bookId}
   </update>
   
   <!-- 책 삭제하기. delete 태그는 삭제 SQL을 실행하기 위한 마이바티스 태그
   		resultType="int" 생략 가능
   		
   		파라미터 타입 : int
   -->
   <delete id="delete" parameterType="int">
   		DELETE FROM BOOK
   		WHERE BOOK_ID = #{bookId}
   </delete>
   
   
   <update id="insertAttach" parameterType="java.util.List">
       <foreach collection="list" item="attachVO" open="INSERT ALL "
          close="SELECT * FROM SYS.DUAL" separator=" ">
          INTO ATTACH VALUES(#{attachVO.seq},#{attachVO.tid},#{attachVO.attachName}
             ,#{attachVO.attachSize},#{attachVO.attachType},sysdate)
       </foreach>
    </update>

   <!-- map : {currentPage=3, show=50} -->
   <select id="memberList" parameterType="hashMap" resultType="ExamMemberVO">
   		WITH T AS(
		    SELECT ROW_NUMBER() OVER (ORDER BY MEM_ID ASC) RNUM
		        , MEM_ID, MEM_NAME, MEM_JOB, MEM_LIKE, MEM_HP
		    FROM MEM
		    WHERE 1 = 1
		    <if test="keyword != null and keyword != ''">
		    	<include refid="where"></include>
		    </if>
		)
		SELECT * FROM T
		WHERE T.RNUM BETWEEN #{currentPage} * #{show} - (#{show}-1) AND #{currentPage} * #{show}
   </select>
   
   <!-- MEM 테이블의 전체 행의 수 -->
   <select id="getTotal" parameterType="hashMap" resultType="int">
   		SELECT COUNT(*) FROM MEM
   		WHERE 1 = 1
   		<if test="keyword != null and keyword != ''">
			<include refid="where"></include>
		</if>
   </select>
   
   <!-- MEM 테이블 INSERT -->
   <insert id="memberInsert" parameterType="ExamMemberVO">
   		INSERT INTO MEM(MEM_ID, MEM_NAME, MEM_JOB, MEM_LIKE, MEM_HP)
		VALUES(#{memId}, #{memName}, #{memJob}, #{memLike}, #{memHp})
   </insert>
   
   <!-- MEM 테이블 아이디 중복 검사 -->
	<select id="memberIdcheck" parameterType="string" resultType="int">
		SELECT COUNT(*)
		FROM MEM
		WHERE MEM_ID = #{memId}
	</select>
</mapper>