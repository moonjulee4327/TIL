<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="product">
	<insert id="insert" parameterType="productVO">
		<!-- BEFORE : insert 문을 실행하기전에 수행
			AFTER : insert 문을 실행한 후 수행
		 -->
		<selectKey order="BEFORE" keyProperty="productId" resultType="String">
			SELECT SUBSTR(MAX(PRODUCT_ID), 0, 1)
    			|| TRIM(SUBSTR(MAX(PRODUCT_ID), 2) +1)  PRODUCT_ID
			FROM PRODUCT
		</selectKey>
		INSERT INTO PRODUCT(
			  PRODUCT_ID
			, PNAME
			, UNIT_PRICE
			, DESCRIPTION
			, MANUFACTURER
			, CATEGORY
			, UNIT_IN_STOCK
			, CONDITION) 
		VALUES(#{productId}
			, #{pname}
			, #{unitPrice}
			, #{description}
			, #{manufacturer}
			, #{category}
			, #{unitInStock}
			, #{condition}
			)
	</insert>
	
	<!-- 상품 목록 -->
	<select id="list" resultType="productVO">
		SELECT P.PRODUCT_ID
			, P.PNAME
			, P.UNIT_PRICE
			, P.DESCRIPTION
			, P.MANUFACTURER
			, P.CATEGORY
			, P.UNIT_IN_STOCK
			, P.CONDITION
			, (SELECT A.ATTACH_NAME FROM ATTACH A
		        WHERE P.PRODUCT_ID = A.TID
		        AND A.SEQ = 1) FILENAME
		FROM PRODUCT P
		WHERE 1 = 1
		<if test="keyword != null and keyword != ''">
		AND (PNAME LIKE '%' || #{keyword} || '%'
		OR CATEGORY LIKE '%' || #{keyword} || '%'
		OR MANUFACTURER LIKE '%' || #{keyword} || '%')
		ORDER BY PRODUCT_ID DESC
		</if>
	</select>
	
	<select id="listAll" resultType="productVO">
		SELECT PRODUCT_ID
			, PNAME
			, UNIT_PRICE
			, DESCRIPTION
			, MANUFACTURER
			, CATEGORY
			, UNIT_IN_STOCK
			, CONDITION
			, FILENAME
		FROM PRODUCT
	</select>
	
	<select id="select_detail" parameterType="productVO" resultType="productVO">
		SELECT P.PRODUCT_ID
		    , P.PNAME
		    , P.UNIT_PRICE
		    , P.DESCRIPTION
		    , P.MANUFACTURER
		    , P.CATEGORY
		    , P.UNIT_IN_STOCK
		    , P.CONDITION
		    , (SELECT A.ATTACH_NAME FROM ATTACH A
		        WHERE P.PRODUCT_ID = A.TID
		        AND A.SEQ = 1) FILENAME
		FROM PRODUCT P
		WHERE P.PRODUCT_ID = #{productId}
	</select>
	
	<select id="cart_select" parameterType="string" resultType="productVO">
		SELECT PRODUCT_ID
			, PNAME
			, UNIT_PRICE
			, DESCRIPTION
			, MANUFACTURER
			, CATEGORY
			, UNIT_IN_STOCK
			, CONDITION
			, FILENAME
		FROM PRODUCT
		WHERE PRODUCT_ID = #{productId}
	</select>
	
	<update id="update" parameterType="productVO">
		UPDATE PRODUCT 
		SET   PNAME = #{pname}
		    , UNIT_PRICE = #{unitPrice}
		    , DESCRIPTION = #{description}
		    , MANUFACTURER = #{manufacturer}
		    , CATEGORY = #{category}
		    , UNIT_IN_STOCK = #{unitInStock}
		    , CONDITION = #{condition}
		WHERE PRODUCT_ID = #{productId}
	</update>
	
	<delete id="delete" parameterType="string">
		DELETE FROM PRODUCT 
		WHERE PRODUCT_ID = #{productId}
	</delete>
	
	<!-- CART_DET 테이블에 insert 
		파라미터 : CartVO
		반환값 : int
	-->
	<insert id="insertCart">
		INSERT INTO CART(CART_ID, NAME, SHIPPING_DATE
					, COUNTRY, ZIP_CODE, ADDRESS_NAME
					, ADDRESS_DETAIL, REGIST_DT)
		VALUES(#{cartId}, #{name}, #{shippingDate}
			, #{country}, #{zipCode}, #{addressName}
			, #{addressDetail}, sysdate)
	
	</insert>
	
	<!-- ATTACH 테이블에 insert 
		파라미터 : List<AttachVO>
		반환값 : 생략
	 -->
	<update id="insertAttach" parameterType="java.util.List">
       <foreach collection="list" item="attachVO" open="INSERT ALL "
          close="SELECT * FROM SYS.DUAL" separator=" ">
          INTO ATTACH VALUES(#{attachVO.seq},#{attachVO.tid},#{attachVO.attachName}
             ,#{attachVO.attachSize},#{attachVO.attachType},sysdate)
       </foreach>
    </update>
	
	<!-- PRODUCT 테이블의 기본키 자동 생성 -->
	<select id="getProductId" resultType="String">
		SELECT SUBSTR(MAX(PRODUCT_ID), 0, 1)
    		|| TRIM(SUBSTR(MAX(PRODUCT_ID), 2) +1)  PRODUCT_ID
		FROM PRODUCT
	</select>
</mapper>
