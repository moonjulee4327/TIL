<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.mapper.GalleryMapper">

	<resultMap type="kr.or.ddit.vo.BookVO" id="bookMap">
		<result property="bookId" column="BOOK_ID"/>
	    <result property="title" column="TITLE"/>
	    <result property="category" column="CATEGORY"/>
	    <result property="price" column="PRICE"/>
	    <result property="insertDate" column="INSERT_DATE"/>
	    <result property="content" column="CONTENT" jdbcType="CLOB" javaType="java.lang.String"/>
		<collection property="attachVOList" resultMap="attachMap"></collection>
	</resultMap>
	
	<resultMap type="kr.or.ddit.vo.AttachVO" id="attachMap">
		<result property="userNo" column="USER_NO"/>
		<result property="seq" column="SEQ"/>
	    <result property="filename" column="FILENAME"/>
	    <result property="filesize" column="FILESIZE"/>
	    <result property="regdate" column="REGDATE"/>
	</resultMap>

	<!-- 이미지 목록 -->
	<select id="list" parameterType="kr.or.ddit.vo.BookVO" resultMap="bookMap">
		SELECT B.BOOK_ID
		    , B.TITLE
		    , B.CATEGORY
		    , B.PRICE
		    , B.INSERT_DATE
		    , B.CONTENT
		    , AT.SEQ
		    , AT.FILENAME
		    , AT.FILESIZE
		    , AT.REGDATE
		FROM BOOK B INNER JOIN ATTACH AT
		ON(B.BOOK_ID = AT.USER_NO)
		WHERE B.BOOK_ID = #{bookId}
	</select>
	
	<!-- select 태그에 추가 -->
	<select id="bookList" resultType="kr.or.ddit.vo.BookVO">
		SELECT BOOK_ID, TITLE, CATEGORY, PRICE, INSERT_DATE, CONTENT
		FROM BOOK
		ORDER BY TITLE ASC
	</select>
	
	<update id="imageUpdate" parameterType="kr.or.ddit.vo.AttachVO">
		UPDATE ATTACH
		SET FILENAME = #{filename}
		WHERE USER_NO = #{userNo} AND SEQ = #{seq}
	</update>
	
	<delete id="imageDelete">
		DELETE FROM ATTACH 
		WHERE USER_NO = #{userNo} AND SEQ = #{seq}
	</delete>
	
	<!-- 도서 검색 -->
	<select id="searchBook" parameterType="kr.or.ddit.vo.BookVO" resultMap="bookMap">
		WITH T AS(
		    SELECT B.BOOK_ID, B.TITLE, B.CATEGORY, B.PRICE, B.INSERT_DATE, B.CONTENT
		        , AT.USER_NO, AT.SEQ, AT.FILENAME, AT.FILESIZE, AT.REGDATE
		    FROM BOOK B LEFT OUTER JOIN ATTACH AT ON(B.BOOK_ID = AT.USER_NO)
		)
		SELECT * FROM T
		WHERE 1=1
		AND (TITLE LIKE '%'|| #{title} ||'%' 
		OR CATEGORY LIKE '%'|| #{title} ||'%' 
		OR CONTENT LIKE '%'|| #{title} ||'%')
	</select>
	
	<update id="uploadAjaxAction" parameterType="java.util.List">
		<foreach collection="list" item="attachVO" open="INSERT ALL" close="SELECT * FROM DUAL" separator=" ">
			INTO ATTACH(USER_NO, SEQ, FILENAME, FILESIZE, REGDATE)
			VALUES(#{attachVO.userNo},#{attachVO.seq},#{attachVO.filename},#{attachVO.filesize},SYSDATE)
		</foreach>
	</update>
	
	<!-- 파라미터 : String bookId
		책의 이미지인 ATTACH 테이블의 다음 seq 번호 가져오기
	 -->
	<select id="getSeq" parameterType="String" resultType="int">
		SELECT NVL(MAX(SEQ),0)+1 FROM ATTACH WHERE USER_NO = #{bookId}
	</select>
	
</mapper>